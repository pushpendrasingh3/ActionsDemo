name: CI + CD

on:
  push:
    branches: [ release, feature, main ]
    paths-ignore:
      - '.github/workflows/*'  
  workflow_dispatch:
    branches: [ feature, release, main ]
    paths-ignore:
      - '.github/workflows/*'  
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GIT_TAG: 0.0.0  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest tag
        run: |
          echo "GIT_TAG=`cat version`" >> "$GITHUB_ENV"
          echo "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        run: |
          docker build -t ${DOCKER_USERNAME}/sample-app:${GIT_TAG} -f argocd-cicd-setup/Dockerfile .
          docker push ${DOCKER_USERNAME}/sample-app:${GIT_TAG}

    
  DeployDev:
    name: Deploy to Dev 
    if: github.event.ref == 'refs/heads/feature'
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Development
      url: 'http://dev.myapp.com'
    steps:
      - name: Login to GitHub Packages
        uses: actions/checkout@v3
        with:
          repository: pushpendrasingh3/ActionsDemo
          ref: 'feature'
          token: ${{ secrets.GH_TOKEN }}  
      - name: Deploy
        run: echo I am deploying in Development! 

    
  DeployStaging:
    name: Deploy to Staging 
    if: (github.event.ref == 'refs/heads/release' || github.event.ref == 'refs/heads/main')
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying in Staging! 
           

  DeployProd:
    name: Deploy to Production 
    #if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
    # if: github.event.ref == 'refs/heads/main'  
    needs: [DeployStaging]
    #needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying in Production!  
